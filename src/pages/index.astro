---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import Body from "../components/Body.astro";
import Article from "../components/Article.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { contentfulClient } from "../lib/contentful";
import type { BlogPost, HeroImage } from "../lib/contentful";

export const prerender = true;

const entries = await contentfulClient.getEntries<BlogPost>({
  content_type: "astroBlog",
});

const posts = entries.items.map((item) => {
  const { title, date, description, slug, heroImage } = item.fields;
  return {
    title,
    slug,
    description,
    heroImage: heroImage as HeroImage,
    date: new Date(date),
  };
});

// const posts = (await getCollection("blog")).sort(
//   (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
// );
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-16">
      <Article>
        <section>
          <ul>
            {
              posts.map((post) => {
                const { slug, title, date, description, heroImage } = post;
                const imageUrl: string = heroImage.fields.file.url;

                return (
                  <li>
                    <a href={`/blog/${slug}/`}>
                      <img src={imageUrl} class="rounded-xl" />
                      <h2>{title}</h2>
                    </a>
                    <FormattedDate date={date} />

                    <p>{description}</p>
                  </li>
                );
              })
            }
            <!-- {
              posts.map(async (post) => {
                const { remarkPluginFrontmatter } = await post.render();
                const minutesRead = remarkPluginFrontmatter.minutesRead;
                return (
                  <li>
                    <a href={`/blog/${post.slug}/`}>
                      <img
                        width={720}
                        height={360}
                        src={post.data.heroImage}
                        alt=""
                      />
                      <h4 class="title">{post.data.title}</h4>
                      <p class="date">
                        <FormattedDate date={post.data.pubDate} />
                      </p>
                      <p>{minutesRead}</p>
                    </a>
                  </li>
                );
              })
            } -->
          </ul>
        </section>
      </Article>
    </main>
    <Footer />
  </Body>
</html>
