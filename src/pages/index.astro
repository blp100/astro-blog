---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import Body from "../components/Body.astro";
import Article from "../components/Article.astro";
import FormattedDate from "../components/FormattedDate.astro";
import { contentfulClient } from "../lib/contentful";
import type { BlogPost, HeroImage } from "../lib/contentful";
import { Markdown } from "@astropub/md/Markdown";

const { items } = await contentfulClient.getEntries<BlogPost>({
  content_type: "astroBlog",
});

const posts = items.map((item) => {
  const { title, date, description, slug, heroImage, content } = item.fields;
  return {
    title,
    slug,
    description,
    heroImage: (heroImage as HeroImage).fields.file.url,
    date: new Date(date),
    content: content.toString(),
  };
});

// const posts = (await getCollection("blog")).sort(
//   (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
// );
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-16">
      <Article>
        <section>
          <ul>
            {
              posts.map((post) => {
                const { slug, title, date, description, heroImage, content } =
                  post;

                return (
                  <>
                    <li class="flex flex-col gap-1">
                      <a href={`/blog/${slug}/`}>
                        <h2 class="text-4xl font-bold mb-1">{title}</h2>
                      </a>
                      <span>{description}</span>
                      <FormattedDate date={date} />
                      <img src={heroImage} class="rounded-xl" />
                      {content.length > 100 ? (
                        <>
                          <Markdown.Inline of={content.slice(0, content.indexOf("---"))} />
                          <a href={`/blog/${slug}/`}>閱讀更多</a>
                        </>
                      ) : (
                        <Markdown.Inline of={content} />
                      )}
                    </li>
                    <hr class="my-2" />
                  </>
                );
              })
            }
          </ul>
        </section>
      </Article>
    </main>
    <Footer />
  </Body>
</html>
