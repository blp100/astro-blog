---
import Post from "../../layouts/Post.astro";
import { contentfulClient } from "../../lib/contentful";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import type { HeroImage, BlogPost } from "../../lib/contentful";
import { Markdown } from "@astropub/md";

export async function getStaticPaths() {
  const { items } = await contentfulClient.getEntries<BlogPost>({
    content_type: "astroBlog",
  });

  const pages = items.map((item) => {
    console.log(item);
    return {
      params: { slug: item.fields.slug },
      props: {
        title: item.fields.title,
        description: item.fields.description,
        content: item.fields.content,
        pubDate: new Date(item.fields.date),
        heroImage: (item.fields.heroImage as HeroImage).fields.file.url,
      },
    };
  });

  return pages;
}

const { content, ...data } = Astro.props;
---

<Post {...data}>
  <Markdown.Inline of={content} />
</Post>
<!-- <html lang="en">
  <head>
    <title>{title}</title>
  </head>
  <body>
    <h1>{title}</h1>
    <time>{date}</time>
    <article set:html={content} />
  </body>
</html> -->

<!-- ---
import { CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import type { string } from "astro/zod";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
console.log(post);
const { Content, remarkPluginFrontmatter } = await post.render();

---

<BlogPost minutesRead={remarkPluginFrontmatter.minutesRead} {...post.data}>
  <Content >
</BlogPost> -->
