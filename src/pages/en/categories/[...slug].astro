---
import Article from "../../../components/Article.astro";
import BaseHead from "../../../components/BaseHead.astro";
import Body from "../../../components/Body.astro";
import Footer from "../../../components/Footer.astro";
import Header from "../../../components/Header.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../../../consts";
import { useTranslations } from "../../../i18n/utils";
import Post from "../../../layouts/Post.astro";
import { contentfulClient } from "../../../lib/contentful";
import type {
  BlogPost,
  Category,
} from "../../../lib/contentful";
import { Markdown } from "@astropub/md";

export async function getStaticPaths() {
  const t = useTranslations("en");
  const { items } = await contentfulClient.getEntries<BlogPost>({
    content_type: "astroBlog",
    locale: t("contentful.locale"),
    order: ["-sys.createdAt"],
    limit: 15,
  });

  const pages = items.map((item) => {
    const { title, date, slug, category } = item.fields;

    return {
      params: { slug: (category as Category).fields.slug },
      props: {
        title,
        slug,
        pubDate: new Date(date),
      },
    };
  });
  return pages;
}

const { title, date, description, content, category } = Astro.props;
const { slug } = Astro.params;

const t = useTranslations("en");
const entries = await contentfulClient.withoutUnresolvableLinks.getEntries<BlogPost>({
  content_type: "astroBlog",
  locale: t("contentful.locale"),
  order: ["-sys.createdAt"],
  limit: 15,
  "fields.category.sys.contentType.sys.id": "astroCategories",
  "fields.category.fields.slug[match]": slug,
});

const posts = entries.items.map((item) => {
  const { title, date, slug, category } = item.fields;

  return {
    title,
    postSlug: slug,
    pubDate: new Date(date),
    category: (category as Category).fields.slug,
  };
});

---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Body>
    <Header title={SITE_TITLE} />
    <main class="pt-16">
      <Article>
        <section>
          <ul>
            {
              posts.map((post) => {
                const { title, postSlug, category } = post;
                return (
                  <li>
                    <a href={`/en/blog/${postSlug}`}>{title}</a>
                  </li>
                );
              })
            }
          </ul>
        </section>
      </Article>
    </main>
    <Footer />
  </Body>
</html>
