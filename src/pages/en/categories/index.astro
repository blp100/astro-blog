---
import { contentfulClient } from "../../../lib/contentful";
import type { BlogPost, BlogCategory } from "../../../lib/contentful";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";
import MainLayout from "../../../layouts/MainLayout.astro";
import CategoryList from "../../../components/CategoryList.astro";
import CategoriesLayout from "../../../layouts/CategoriesLayout.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const entries = await contentfulClient.getEntries<BlogCategory>({
  content_type: "astroCategories",
  locale: t("contentful.locale"),
  order: ["-sys.createdAt"],
});

const posts = entries.items.map((item) => {
  const id = item.sys.id;
  const { title, slug } = item.fields;
  return {
    title: title.trim(),
    slug,
    id,
  };
});

const postPromises = posts.map(async (post) => {
  const blogEntries = await contentfulClient.getEntries<BlogPost>({
    content_type: "astroBlog",
    locale: t("contentful.locale"),
    links_to_entry: post.id,
    include: 0,
  });

  return { total: blogEntries.total, ...post };
});

const addedNumberPosts = await Promise.all(postPromises);
---

<MainLayout>
  <CategoriesLayout postsLength={addedNumberPosts.length}>
    {
      addedNumberPosts.map((post: any) => {
        const { title, total, slug } = post;
        return <CategoryList title={title} total={total} slug={slug} />;
      })
    }
  </CategoriesLayout>
</MainLayout>
